# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Database Test

on:
  push:
    branches: [ main, 'develop*' ]
  pull_request:
    branches: [ main ]

jobs:
  test-database:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install SQLite
      run: |
        sudo apt-get update
        sudo apt-get install -y sqlite3
        sqlite3 --version
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test database and run migrations
      run: |
        # Set test database path
        echo "DATABASE_URL=file:./test.db" > .env.test
        
        # Generate Prisma client
        npx prisma generate
        
        # Run migrations to create database and schema
        DATABASE_URL=file:./test.db npx prisma migrate deploy

    - name: Verify database seeding
      run: |
          # Create a simple Node.js script to check tables
          echo 'const { PrismaClient } = require("@prisma/client");
          const prisma = new PrismaClient();
          
          async function checkTables() {
            try {
              const recipeCount = await prisma.recipe.count();
              console.log(`Database has ${recipeCount} recipes`);
              process.exit(0);
            } catch (error) {
              console.error("Error:", error);
              process.exit(1);
            } finally {
              await prisma.$disconnect();
            }
          }
          
          checkTables();' > verify.js
          
          # Run the verification script
          DATABASE_URL=file:./test.db node verify.js